<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pujjr.base.dao.SysWorkgroupMapper" >
  <resultMap id="BaseResultMap" type="com.pujjr.base.domain.SysWorkgroup" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="WORKGROUP_NAME" property="workgroupName" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_ID" property="createId" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_ID" property="updateId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, WORKGROUP_NAME, PARENT_ID, CREATE_TIME, CREATE_ID, UPDATE_TIME, UPDATE_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_workgroup
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_workgroup
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.pujjr.base.domain.SysWorkgroup" >
    insert into sys_workgroup (ID, WORKGROUP_NAME, PARENT_ID, 
      CREATE_TIME, CREATE_ID, UPDATE_TIME, 
      UPDATE_ID)
    values (#{id,jdbcType=VARCHAR}, #{workgroupName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pujjr.base.domain.SysWorkgroup" >
    insert into sys_workgroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="workgroupName != null" >
        WORKGROUP_NAME,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createId != null" >
        CREATE_ID,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateId != null" >
        UPDATE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workgroupName != null" >
        #{workgroupName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pujjr.base.domain.SysWorkgroup" >
    update sys_workgroup
    <set >
      <if test="workgroupName != null" >
        WORKGROUP_NAME = #{workgroupName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        CREATE_ID = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pujjr.base.domain.SysWorkgroup" >
    update sys_workgroup
    set WORKGROUP_NAME = #{workgroupName,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_ID = #{createId,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{updateId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
  	select * from sys_workgroup
  </select>
  <delete id="deleteWorkgroupRelateSysAccounts">
  	delete from  sys_workgroup_account where workgroup_id = #{workgroupId}
  </delete>
  <select id="selectListByParentId" resultMap="BaseResultMap">
  	select * from sys_workgroup where PARENT_ID =#{parentId}
  </select>
  <select id="selectMatchRuleAccountList" resultType="HashMap">
  	
	select distinct g.id as taskCntRuleId
	from 
	sys_workgroup  a
	inner join t_rule_product  b  on a.id = b.workgroup_id
	inner join t_rule_dealer c on a.id = c.workgroup_id
	inner join t_rule_finance_amount d on a.id = d.workgroup_id
	inner  join sys_workgroup_account e on a.id = e.workgroup_id
	inner join sys_account f on e.sysaccount_id = f.id
	inner join t_rule_member_taskcnt g on (g.workgroup_id = a.id and g.account_id = f.id)
	where 
	<![CDATA[d.min_amount<=#{financeAmount} and d.max_amount>#{financeAmount}]]>
	and b.product_code = #{productCode}
	and c.sys_branch_id = #{dealerId}
	<if test="groups.size()!=0">
		and a.id in 
		<foreach item="item" index="index" collection="groups"
			open="(" separator="," close=")">
				#{item.id}
		</foreach>
	</if>
	<if test="candidateAccounts.size()!=0">
		and f.account_id in 
		<foreach item="item" index="index" collection="candidateAccounts"
			open="(" separator="," close=")">
				#{item}
		</foreach>
		
	</if>
	<![CDATA[and timestampdiff(SECOND,f.last_heartbeat_time,now()) <= 30]]>
  </select>
  <select id="selectWorkgroupOnlineAccountList" resultType="HashMap">
  	select distinct g.id as taskCntRuleId
	from  sys_workgroup  a
	inner  join sys_workgroup_account e on a.id = e.workgroup_id
	inner join sys_account f on e.sysaccount_id = f.id
	inner join t_rule_member_taskcnt g on (g.workgroup_id = a.id and g.account_id = f.id)
	and a.id in 
	<foreach item="item" index="index" collection="groups"
			open="(" separator="," close=")">
				#{item.id}
	</foreach>
	<![CDATA[and timestampdiff(SECOND,f.last_heartbeat_time,now()) <= 30]]>
  </select>
  <select id="selectByName" resultMap="BaseResultMap">
  	select * from sys_workgroup where workgroup_name =#{workgroupName}
  </select>
</mapper>