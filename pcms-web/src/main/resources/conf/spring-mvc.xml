<?xml version="1.0" encoding="UTF-8"?>
<!-- Bean头部 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd  
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd              
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
    <!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<!-- <context:component-scan base-package="org.activiti.rest.editor,
											org.activiti.rest.diagram,
											com.pujjr">										
    </context:component-scan> -->
 	<context:property-placeholder location="classpath:conf/jdbc.properties" />
	<context:component-scan base-package="org.activiti.rest.editor,
	org.activiti.rest.diagram,
	com.pujjr.*.controller">
	</context:component-scan>
	
	<mvc:annotation-driven>
		<mvc:message-converters>
		    <ref bean="byteArrayHttpMessageConverter"/>
			<ref bean="stringHttpMessageConverter"/>
			<ref bean="fastJsonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.pujjr.core.intercepter.ControllerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	-->
	<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
	</bean>
	<bean id="stringHttpMessageConverter"  
        class="org.springframework.http.converter.StringHttpMessageConverter">  
        <constructor-arg value="UTF-8" index="0"></constructor-arg><!--  避免出现乱码 -->  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value> 
            </list>  
        </property>  
    </bean>  
    <bean id="fastJsonHttpMessageConverter"  
        class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <!--  <value>application/json;charset=UTF-8</value>  -->
                <value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->  
            </list>  
        </property>  
        <property name="features">  
            <util:list>  
                <!-- <value>WriteMapNullValue</value> -->  
                <value>QuoteFieldNames</value>  
                <value>WriteDateUseDateFormat</value>  
                <value>DisableCircularReferenceDetect</value>
            </util:list>  
        </property>  
    </bean>  
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
	    <description>  
	    </description>  
	    <property name="order" value="10" />  
	    <property name="prefix" value="/" />  
	    <property name="suffix" value=".html" />  
	</bean>  

	<!-- 静态资源过滤 -->
	<mvc:resources mapping="/template/**" location="/template/"/>	
	<mvc:resources mapping="/css/**" location="/css/"/>	
	<mvc:resources mapping="/font/**" location="/font/"/>	
	
	
</beans>