<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
             			http://www.springframework.org/schema/task 
             			http://www.springframework.org/schema/task/spring-task-4.2.xsd">
         			
	<context:component-scan base-package="com.pujjr.carcredit.service,com.pujjr.carcredit.service.impl,com.pujjr.carcredit.dao.impl"/>
	<context:component-scan base-package="com.pujjr.jbpm.service,com.pujjr.jbpm.service.impl"/>
	<context:component-scan base-package="com.pujjr.base.service,com.pujjr.base.service.impl"/>
	<context:component-scan base-package="com.pujjr.file.dao.impl,com.pujjr.file.service.impl"/>
	<context:component-scan base-package="com.pujjr.carcredit.exthandle"/>
	<context:component-scan base-package="com.pujjr.push.service.impl,com.pujjr.push.config,com.pujjr.push.handler,com.pujjr.push.intercepter"/>
	<context:component-scan base-package="com.pujjr.postloan.service.impl"/>
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc.properties</value>
				<value>classpath:conf/pcms-push.properties</value>
				<value>classpath:conf/ali-oss.properties</value>
				<value>classpath:conf/task-assignee.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle">
			<value>20</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>1800</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pujjr.base.dao;com.pujjr.jbpm.dao;com.pujjr.carcredit.dao;com.pujjr.file.dao;com.pujjr.push.dao;com.pujjr.postloan.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/pujjr/**/mapper/*.xml"></property>
		<property name="configLocation" value="classpath:conf/mybatis.xml"></property>
	</bean>
	<!-- 通过Spring进行事务的管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource"/>

	<!-- aop -->
	<aop:aspectj-autoproxy proxy-target-class="true"  expose-proxy="true"/>
	<bean class="com.pujjr.carcredit.aspect.ApplyOperHisAspect"/>
	<bean class="com.pujjr.push.aspect.PushAspect"/>
	
</beans>